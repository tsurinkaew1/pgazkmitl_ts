classdef class_settings
    methods (Static)
function pgaz_general_settings
        fig = figure('Name', 'General Settings', ...
                     'NumberTitle', 'off', ...
                     'MenuBar', 'none', ...
                     'Position', centerFigure(300, 420), ...
                     'Resize', 'off', ...
                     'Color', [1 1 1]);
    
        % Retrieve existing workspace variables if they exist
        freqBase = getValueFromBase('freqBase', '50');
        powerBase = getValueFromBase('basemva', '100');
        maxIter = getValueFromBase('maxiter', '500');
        accuracy = getValueFromBase('accuracy', '0.000001');
        accelFactor = getValueFromBase('accel', '1.200');
        methodIdx = getValueFromBase('methodIdx', 1);
    
        % Data file variable
        if evalin('base', 'exist(''NameDatainput'', ''var'')') && ~isempty(evalin('base', 'NameDatainput'))
            nameData = evalin('base', 'NameDatainput');
        else
            nameData = '';
        end
    
        panel = uipanel('Parent', fig, ...
                        'Units', 'pixels', ...
                        'Position', [10, 10, 280, 395], ...
                        'BackgroundColor', [1 1 1]);
    
        uicontrol('Style', 'text', ...
                  'String', 'General Setting', ...
                  'FontSize', 10, ...
                  'FontName', 'Arial', ...
                  'FontWeight', 'bold', ...
                  'ForegroundColor', [0 0 0.5], ...
                  'BackgroundColor', [1 1 1], ...
                  'Position', [20, 383, 110, 30], ...
                  'HorizontalAlignment', 'center');
    
        uicontrol('Style', 'text', ...
                  'String', 'Data File:', ...
                  'FontSize', 8, ...
                  'FontName', 'Arial', ...
                  'Position', [25, 360, 100, 20], ...
                  'HorizontalAlignment', 'left', ...
                  'BackgroundColor', [1 1 1]);
        hNameData = uicontrol('Style', 'edit', ...
                              'String', nameData, ...
                              'Position', [80, 360, 195, 25], ...
                              'Enable', 'inactive', ...
                              'BackgroundColor', [1 1 1]);
    
        hMethod = uicontrol('Style', 'popupmenu', ...
                            'String', {'Newton Raphson (NR)', ...
                                       'Gauss Seidel (GS)', ...
                                       'Fast Decoupled (FD)', ...
                                       'Iwamoto Method (IW)'}, ...
                            'Position', [80, 320, 195, 25], ...
                            'Value', methodIdx);
    
        uicontrol('Style', 'text', ...
                  'String', 'Method:', ...
                  'FontSize', 8, ...
                  'FontName', 'Arial', ...
                  'Position', [25, 320, 40, 20], ...
                  'HorizontalAlignment', 'left', ...
                  'BackgroundColor', [1 1 1]);
    
        uicontrol('Style', 'text', ...
                  'String', 'Frequency Base (Hz):', ...
                  'FontSize', 8, ...
                  'FontName', 'Arial', ...
                  'Position', [25, 283, 120, 20], ...
                  'HorizontalAlignment', 'left', ...
                  'BackgroundColor', [1 1 1]);
        hFreqBase = uicontrol('Style', 'edit', ...
                              'String', freqBase, ...
                              'Position', [140, 283, 135, 25]);
    
        uicontrol('Style', 'text', ...
                  'String', 'Power Base (MVA):', ...
                  'FontSize', 8, ...
                  'FontName', 'Arial', ...
                  'Position', [25, 243, 120, 20], ...
                  'HorizontalAlignment', 'left', ...
                  'BackgroundColor', [1 1 1]);
        hPowerBase = uicontrol('Style', 'edit', ...
                               'String', powerBase, ...
                               'Position', [140, 243, 135, 25]);
    
        uicontrol('Style', 'text', ...
                  'String', 'Max PF iteration:', ...
                  'FontSize', 8, ...
                  'FontName', 'Arial', ...
                  'Position', [25, 203, 120, 20], ...
                  'HorizontalAlignment', 'left', ...
                  'BackgroundColor', [1 1 1]);
        hMaxIter = uicontrol('Style', 'edit', ...
                             'String', maxIter, ...
                             'Position', [140, 203, 135, 25]);
    
        uicontrol('Style', 'text', ...
                  'String', 'Accuracy:', ...
                  'FontSize', 8, ...
                  'FontName', 'Arial', ...
                  'Position', [25, 163, 120, 20], ...
                  'HorizontalAlignment', 'left', ...
                  'BackgroundColor', [1 1 1]);
        hAccuracy = uicontrol('Style', 'edit', ...
                              'String', accuracy, ...
                              'Position', [140, 163, 135, 25]);
    
        uicontrol('Style', 'text', ...
                  'String', 'Acceleration Factor:', ...
                  'FontSize', 8, ...
                  'FontName', 'Arial', ...
                  'Position', [25, 123, 120, 20], ...
                  'HorizontalAlignment', 'left', ...
                  'BackgroundColor', [1 1 1]);
        hAccelFactor = uicontrol('Style', 'edit', ...
                                 'String', accelFactor, ...
                                 'Position', [140, 123, 135, 25]);
    
        imageFolder = fullfile(pwd, 'pgaz_images');
        imageFile = 'pgaz_logo.png';
        imagePath = fullfile(imageFolder, imageFile);
    
        if exist(imagePath, 'file')
            axLogo = axes('Parent', panel, ...
                          'Units', 'pixels', ...
                          'Position', [10, -20, 100, 100], ...
                          'Tag', 'LogoAxes');
            img = imread(imagePath);
            imshow(img, 'Parent', axLogo);
        else
            warning('The image file "%s" was not found in the folder "%s".', ...
                    imageFile, imageFolder);
        end
    
       btnOK = uicontrol('Style', 'pushbutton', ...
                  'String', 'OK', ...
                  'FontName', 'Arial', ...
                  'FontSize', 8, ...
                  'Position', [150, 20, 60, 25], ...
                  'BackgroundColor', [0.98, 0.98, 0.98], ...
                  'ForegroundColor', [0, 0, 0], ...
                  'FontWeight', 'normal', ...
                  'Callback', @(~, ~) okCallback(fig, hMethod, hFreqBase, hPowerBase, hMaxIter, hAccuracy, hAccelFactor));
    
        btnCancel = uicontrol('Style', 'pushbutton', ...
                  'FontName', 'Arial', ...
                  'FontSize', 8, ...
                  'String', 'Cancel', ...
                  'Position', [215, 20, 60, 25], ...
                  'BackgroundColor', [0.98, 0.98, 0.98], ...
                  'ForegroundColor', [0, 0, 0], ...
                  'FontWeight', 'normal', ...
                  'Callback', @(~, ~) close(fig));

        % ตั้งค่าการตรวจสอบการเคลื่อนเมาส์
        set(fig, 'WindowButtonMotionFcn', @(~, ~) checkMouseOverMultiple(fig, btnOK, btnCancel));
   
    
    function value = getValueFromBase(varName, defaultValue)
        if evalin('base', sprintf('exist(''%s'', ''var'')', varName))
            value = evalin('base', varName);
        else
            value = defaultValue;
        end
    end
    
    function pos = centerFigure(width, height)
        screenSize = get(0, 'ScreenSize');
        screenWidth = screenSize(3);
        screenHeight = screenSize(4);
        pos = [(screenWidth - width) / 2, ...
               (screenHeight - height) / 2, ...
               width, height];
    end
    
    function okCallback(fig, hMethod, hFreqBase, hPowerBase, hMaxIter, hAccuracy, hAccelFactor)
        methodIdx = get(hMethod, 'Value');
        freqBase = str2double(get(hFreqBase, 'String'));
        powerBase = str2double(get(hPowerBase, 'String'));
        maxIter = str2double(get(hMaxIter, 'String'));
        accuracy = str2double(get(hAccuracy, 'String'));
        accelFactor = str2double(get(hAccelFactor, 'String'));
        assignin('base', 'methodIdx', methodIdx);
        assignin('base', 'freqBase', freqBase);
        assignin('base', 'basemva', powerBase);
        assignin('base', 'maxiter', maxIter);
        assignin('base', 'accuracy', accuracy);
        assignin('base', 'accel', accelFactor);
        OperationSuccess='Settings have been saved to the workspace.';
        assignin('base', 'OperationSuccess', OperationSuccess);
        disp('General Settings have been saved to the workspace.');
        BuildBoxHandle = findobj('Tag', 'BuildBox');
            if ~isempty(BuildBoxHandle)
                set(BuildBoxHandle, 'String', OperationSuccess);
            else
                disp('BuildBox not found.');
            end
        close(fig); 
    end

   function checkMouseOverMultiple(fig, btnOK, btnCancel)
        mousePos = get(fig, 'CurrentPoint'); % ตำแหน่งเมาส์ในฟิกเกอร์
    
        % ตรวจสอบปุ่ม OK
        btnPosOK = getpixelposition(btnOK);
        if mousePos(1) >= btnPosOK(1) && mousePos(1) <= btnPosOK(1) + btnPosOK(3) && ...
           mousePos(2) >= btnPosOK(2) && mousePos(2) <= btnPosOK(2) + btnPosOK(4)
            % ชี้เมาส์บนปุ่ม OK
            set(btnOK, 'BackgroundColor', [0, 0, 0.5]); % สีพื้นหลังฟ้าเข้ม
            set(btnOK, 'ForegroundColor', [1, 1, 1]); % ตัวอักษรขาว
        else
            % รีเซ็ตเป็นสถานะปกติ
            set(btnOK, 'BackgroundColor', [0.98, 0.98, 0.98]); % สีพื้นหลังเทาอ่อน
            set(btnOK, 'ForegroundColor', [0, 0, 0]); % ตัวอักษรดำ
        end
    
        % ตรวจสอบปุ่ม Cancel
        btnPosCancel = getpixelposition(btnCancel);
        if mousePos(1) >= btnPosCancel(1) && mousePos(1) <= btnPosCancel(1) + btnPosCancel(3) && ...
           mousePos(2) >= btnPosCancel(2) && mousePos(2) <= btnPosCancel(2) + btnPosCancel(4)
            % ชี้เมาส์บนปุ่ม Cancel
            set(btnCancel, 'BackgroundColor', [0, 0, 0.5]); % สีพื้นหลังฟ้าเข้ม
            set(btnCancel, 'ForegroundColor', [1, 1, 1]); % ตัวอักษรขาว
        else
            % รีเซ็ตเป็นสถานะปกติ
            set(btnCancel, 'BackgroundColor', [0.98, 0.98, 0.98]); % สีพื้นหลังเทาอ่อน
            set(btnCancel, 'ForegroundColor', [0, 0, 0]); % ตัวอักษรดำ
        end
    end


end

    end
end
